Country %in% south_america  ~ "South America",
Country %in% oceania  ~ "Oceania"
)
) %>%
drop_na(Continent) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, colour = Continent)) +
scale_color_manual(values=c('#ff9900', '#ff4d94', '#9900cc', '#009999', '#ffcc00', '#00cc00')) +
geom_point() +
labs(title= 'Trend and Seasonal Strenght in different Countries', caption = "fig. 32")
components(dec) %>% gg_subseries(season_year) +
labs(title = 'Subseries by month of Land and Ocean Global Temperatures', caption = "fig. 33")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
model(stlf = decomposition_model(
STL(LandOceanAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>%
forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land & Ocean Average Temperature - Forecast",
subtitle = "Drift method based on seasonal adjusted data",
y="LandOceanAvgTemp Cº",
caption = "fig. 37")
knitr::opts_chunk$set(echo = TRUE)
#loading libraries
library(fpp3)
library(tidyverse)
#working directory for github
setwd("~/Project-Forecasting-Methods")
#--------------------------------------------- be careful with this code below
#loading the data -->just to run for the first time
#GlobalTemperature <-read.csv("data/GlobalTemperatures.csv")
#adding column -->just to run for the first time
#GlobalTemperature["Country"]<- "Global"
#creating new csv file --> just to run for the first time
#write.csv(GlobalTemperature, "GlobalTemperatures2.csv")
#Country <- read.csv("data/GlobalLandTemperaturesByCountry.csv")
#names(Country) <-c("dt","LandAverageTemperature", "AverageTemperatureUncertainty","Country")
#write.csv(Country,"GlobalLandTemperaturesByCountry2.csv")
#------------------------------------------- be careful with this code above
#merging Global file with country file
GlobalCountryTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
#transforming in a tsibble
GlobalCountryTemp<- GlobalCountryTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, Country, everything()) %>% select(-dt,-LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty,-AverageTemperatureUncertainty)
#changing columns names
names(GlobalCountryTemp) <-c('Date','Country','idk', 'LandAvgTemp','LandAvgTempUnc', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp', 'LandOceanAvgTempUnc')
GlobalCountryTemp <-GlobalCountryTemp %>%  select(-idk)
#-------------------Objects for visualization
#Creating GlobalTemp object, which contains only Global values and cleaning it for visualization
GlobalTempV <- GlobalCountryTemp %>% filter(Country=="Global")  %>% filter(year(Date)>1984, year(Date)<2014)
GlobalTempV <-na.omit(GlobalTempV)
#Creating CountryTemp objects, each contains one country and cleaning it for visualizations purpose -->Not sure if its needed to use
#using years above 1984 for visualisation purposes
#PortugalTempV <-GlobalCountryTemp %>% filter(Country == "Portugal") %>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#GermanyTempV <-GlobalCountryTemp %>% filter(Country == "Germany")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#UkTempV <-GlobalCountryTemp %>% filter(Country == "United Kingdom")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#BrazilTempV <-GlobalCountryTemp %>% filter(Country == "Brazil")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#USATempV <-GlobalCountryTemp %>% filter(Country == "United States")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#ChinaTempV <-GlobalCountryTemp %>% filter(Country == "China")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#MaliTempV <-GlobalCountryTemp %>% filter(Country == "Mali")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#SouthAfricaTempV <-GlobalCountryTemp %>% filter(Country == "South Africa")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#AustraliaTempV <-GlobalCountryTemp %>% filter(Country == "Australia")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#GreenlandTempV <- GlobalCountryTemp %>% filter(Country == "Greenland")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#divided it because analysing 10 at once gets really messy
countries<- c('Portugal','Mali','Greenland')
countries2<- c('Portugal', 'Germany', 'United Kingdom','Brazil','United States')
countries3<-c('China','Mali','South Africa','Australia','Greenland')
#-------------------Objects to use in the rest of the work
#Global
GlobalTemp <- GlobalCountryTemp %>% filter(Country=="Global")
GlobalTemp <-na.omit(GlobalTemp)
#Countries-->not sure if its needed to use
PortugalTemp <-GlobalCountryTemp %>% filter(Country == "Portugal") %>% select(Date, Country, LandAvgTemp)
GermanyTemp <-GlobalCountryTemp %>% filter(Country == "Germany")%>% select(Date, Country, LandAvgTemp)
UkTemp <-GlobalCountryTemp %>% filter(Country == "United Kingdom")%>% select(Date, Country, LandAvgTemp)
BrazilTemp <-GlobalCountryTemp %>% filter(Country == "Brazil")%>% select(Date, Country, LandAvgTemp)
USATemp <-GlobalCountryTemp %>% filter(Country == "United States")%>% select(Date, Country, LandAvgTemp)
ChinaTemp <-GlobalCountryTemp %>% filter(Country == "China")%>% select(Date, Country, LandAvgTemp)
MaliTemp <-GlobalCountryTemp %>% filter(Country == "Mali")%>% select(Date, Country, LandAvgTemp)
SouthAfricaTemp <-GlobalCountryTemp %>% filter(Country == "South Africa")%>% select(Date, Country, LandAvgTemp)
AustraliaTemp <-GlobalCountryTemp %>% filter(Country == "Australia")%>% select(Date, Country, LandAvgTemp)
GreenlandTemp <- GlobalCountryTemp %>% filter(Country == "Greenland")%>% select(Date, Country, LandAvgTemp)
GlobalTemp %>% autoplot(LandOceanAvgTemp)+
geom_line(color="blue")+
labs(title = "Land & Ocean Temperature - Global",
subtitle = "Average",
y="LandOceanAvgTemp Cº",
caption = "fig. 1")
GlobalCountryTemp %>% filter(Country == "Brazil") %>% autoplot(LandAvgTemp)+
geom_line(color="green")+
labs(title = "Land Temperature in Brazil - Since 1850",
subtitle="Average",
y="LandAvgTemp Cº",
caption = "fig. 2")
GlobalCountryTemp %>% filter(Country=="Global") %>% autoplot(LandAvgTempUnc)+
labs(title = "Land Average temperature Uncertainty - Evolution through time",
caption = "fig. 3")
GlobalTempV %>% ggplot()+
geom_line(data=GlobalTempV, aes(Date, LandMaxTemp, col="LandMaxTemp"))+
geom_line(data=GlobalTempV, aes(Date,LandAvgTemp,col="LandAvgTemp"),lwd=2)+
geom_line(data=GlobalTempV, aes(Date, LandMinTemp, col="LandMinTemp"))+
labs(title = "Land temperature - Global overview",
y="LandTemp Cº",
color="Temperature Type",
caption = "fig. 4")+
scale_color_manual(values= c("red","black","blue"))
GlobalCountryTemp %>% filter(Country %in% countries) %>% filter(year(Date)>1984) %>% autoplot(LandAvgTemp)+
geom_line(data=GlobalTempV ,aes(Date, LandAvgTemp, col= "Global"),lwd=2)+
labs(title= "Global & Country Land Temperature - Last 30 years",
subtitle = "Average",
y= "LandAvgTemp Cº",
caption = "fig. 5")+
ylim(-30,40)+
theme(legend.position = "right")
#seasonal and trending
GlobalCountryTemp %>%
filter(Country=="Global") %>%
gg_season(LandAvgTemp)+
labs(title = "Seasonality in global temperature - Land",
y="LandAvgTemp Cº",
color="Years",
caption = "fig. 6")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
gg_season(LandOceanAvgTemp)+
labs(title = "Seasonality in global temperature - Land and Ocean",
y="LandOceanAvgTemp Cº",
color="Years",
caption = "fig. 7")
#subseries
GlobalCountryTemp %>%
filter(Country=="Global") %>%
gg_subseries(LandAvgTemp)+
labs(title = "Subseries - monthly global analysis",
y="LandAvgTemp Cº",
caption = "fig. 8")
GlobalCountryTemp %>%
filter(Country %in% countries2) %>%
gg_subseries(LandAvgTemp)+
labs(title = "Subseries - monthly analysis",
y="LandAvgTemp Cº",
caption = "fig. 9")
GlobalCountryTemp %>%
filter(Country %in% countries3) %>%
gg_subseries(LandAvgTemp)+
labs(title = "Subseries - monthly analysis",
y="LandAvgTemp Cº",
caption = "fig. 10")
#6, 12 or 24 lags--> monthly data
#In this case 12 looks the best as it captures all months of one year
GlobalCountryTemp %>% filter(Country=="Global") %>% ACF(LandAvgTemp,lag_max = 12) %>% autoplot()+
labs(title = "Autocorrelation in LandAvgTemp - Global",
subtitle = "12 month lag",
caption = "fig. 11")
GlobalCountryTemp %>%
filter(Country %in% countries2)%>% ACF(LandAvgTemp,lag_max = 12) %>% autoplot()+
labs(title = "Autocorrelation in LandAvgTemp - Country",
subtitle = "12 month lag",
caption = "fig. 12")
#transforming it into yearly data since there is no seasonality
#showing the first 48 years
uncertainty<- GlobalCountryTemp %>% filter(Country=="Global") %>%
mutate(Year= year(Date)) %>%
as_tibble(GlobalCountryTemp) %>%
group_by(Year)%>%
select(-Date) %>%
summarise(LandAvgTempUnc= mean(LandAvgTempUnc))
uncertainty %>%as_tsibble(index=Year) %>% filter(Year> "1752") %>%
ACF(LandAvgTempUnc, lag_max = 48) %>% autoplot()+
labs(title = "Autocorrelation in LandAvgTempUnc - Global",
subtitle = "48 years lag",
caption = "fig. 13")
GlobalCountryTemp %>%
fill(LandAvgTemp, .direction = 'down') %>%
fill(LandOceanAvgTemp, .direction = 'down') -> GlobalCountryTemp
#colSums(is.na(GlobalCountryTemp))
GlobalTemp %>%
filter(year(Date)>1838, year(Date)<1900) %>%
autoplot(LandAvgTemp)+
geom_line(color = '#0088cc')+
labs(title = "Land Temperature- Global",
subtitle = "Average",
y="LandAvgTemp Cº", caption = "fig. 14")
GlobalTemp %>%
filter(year(Date)>1900, year(Date)<1990) %>%
autoplot(LandAvgTemp)+
geom_line(color = '#ff3399')+
labs(title = "Land Temperature- Global",
subtitle = "Average",
y="LandAvgTemp Cº", caption = "fig. 15")
GlobalTemp %>%
filter(year(Date)>1990, year(Date)<2014) %>%
autoplot(LandAvgTemp)+
geom_line(color = '#cc33ff')+
labs(title = "Land Temperature- Global",
subtitle = "Average",
y="LandAvgTemp Cº", caption = "fig. 16")
GlobalTemp %>%
select(LandOceanAvgTemp) -> land_ocean_global_temp
land_ocean_global_temp %>%
model(classical_decomposition(LandOceanAvgTemp, type = "additive")) %>%
components() -> classic_decmp
classic_decmp %>%
autoplot() +
labs(title = "Land and Ocean Global Temperature Classical Additive Decomposition", caption = "fig. 17")
classic_decmp %>%
autoplot(random, color = '#ff668c') +
labs(title = "Variations not Captured by Classical Decomposition in Land and Ocean", caption = "fig. 18")
dec <- land_ocean_global_temp %>%
model(stl = STL(LandOceanAvgTemp))
#components(dec)
GlobalTemp %>%
select(LandAvgTemp) -> land_global_temp
dec2 <- land_global_temp %>%
model(stl = STL(LandAvgTemp))
#components(dec2)
land_ocean_global_temp %>%
autoplot(LandOceanAvgTemp, color = 'gray') +
autolayer(components(dec), trend, color = '#6666ff') +
ggtitle('Land and Ocean Global Temperature Trend') +
labs(caption = "fig. 19")
land_global_temp %>%
autoplot(LandAvgTemp, color = 'gray') +
autolayer(components(dec2), trend, color = 'purple') +
ggtitle('Land Global Temperature Trend')+
labs(caption = "fig. 20")
components(dec) %>%
filter(year(Date)>1900) -> comp_after1900
land_ocean_global_temp %>%
filter(year(Date)>1900) %>%
autoplot(LandOceanAvgTemp, color = 'gray') +
autolayer(comp_after1900, trend, color = '#6666ff') +
ggtitle('Land and Ocean Global Temperature Trend')+
labs(caption = "fig. 21")
land_global_temp %>%
autoplot(LandAvgTemp, color = 'gray') +
autolayer(components(dec2), season_adjust, color = 'purple') +
ggtitle('Seasonal Adjusted Land Global Temperature')+
labs(caption = "fig. 22")
components(dec) %>%
autoplot() + ggtitle('Land and Ocean Global Temperature STL Decomposition')+
labs(caption = "fig. 23")
#components(dec2) %>%
#  autoplot() + ggtitle('Land Global Temperature')
components(dec) %>%
autoplot(remainder, color = '#ff668c') + ggtitle('Land Global Temperature Remainder')+
labs(caption = "fig. 24")
#components(dec2) %>%
#autoplot(remainder, color = '#8c66ff') + ggtitle('Land and Ocean Global Temperature Remainder')
land_ocean_global_temp %>%
filter(year(Date) > 1990) %>%
model(seats = feasts::: SEATS(LandOceanAvgTemp)) %>%
components() -> seats_dec
autoplot(seats_dec) + labs(title = "Land and Ocean Global Temperature X-13 ARIMA-SEATS Decomposition", caption = "fig. 25")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1850) %>%
filter (Country == 'Europe') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempEurope = mean)) %>%
as_tsibble() %>%
fill(LandTempEurope, .direction = 'down') -> tempEurope
decEurope <- tempEurope %>%
model(stl = STL(LandTempEurope))
#components(decEurope)
tempEurope %>%
autoplot(LandTempEurope, color = 'gray') +
autolayer(components(decEurope), trend, color = '#9900cc') +
ggtitle('Land Temperature Europe Trend') +
labs(caption = "fig. 26")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1860) %>%
filter (Country == 'Africa') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempAfrica = mean)) %>%
as_tsibble() %>%
fill(LandTempAfrica, .direction = 'down') -> tempAfrica
decAfrica <- tempAfrica %>%
model(stl = STL(LandTempAfrica))
#components(decAfrica)
tempAfrica %>%
autoplot(LandTempAfrica, color = 'gray') +
autolayer(components(decAfrica), trend, color = '#e65c00') +
ggtitle('Land Temperature Africa Trend') +
labs(caption = "fig. 27")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1850) %>%
filter (Country == 'Asia') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempAsia = mean)) %>%
as_tsibble() %>%
fill(LandTempAsia, .direction = 'down') -> tempAsia
decAsia <- tempAsia %>%
model(stl = STL(LandTempAsia))
#components(decAsia)
tempAsia %>%
autoplot(LandTempAsia, color = 'gray') +
autolayer(components(decAsia), trend, color = '#ff4d94') +
ggtitle('Land Temperature Asia Trend') +
labs(caption = "fig. 28")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1850) %>%
filter (Country == 'South America') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempSouthAmerica = mean)) %>%
as_tsibble() %>%
fill(LandTempSouthAmerica, .direction = 'down') -> tempSouthAmerica
decSouthAmerica <- tempSouthAmerica %>%
model(stl = STL(LandTempSouthAmerica))
#components(decSouthAmerica)
tempSouthAmerica %>%
autoplot(LandTempSouthAmerica, color = 'gray') +
autolayer(components(decSouthAmerica), trend, color = '#008040') +
ggtitle('Land Temperature South America Trend') +
labs(caption = "fig. 29")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1850) %>%
filter (Country == 'North America') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempNorthAmerica = mean)) %>%
as_tsibble() %>%
fill(LandTempNorthAmerica, .direction = 'down') -> tempNorthAmerica
decNorthAmerica <- tempNorthAmerica %>%
model(stl = STL(LandTempNorthAmerica))
#components(decNorthAmerica)
tempNorthAmerica %>%
autoplot(LandTempNorthAmerica, color = 'gray') +
autolayer(components(decNorthAmerica), trend, color = '#009999') +
ggtitle('Land Temperature North America Trend') +
labs(caption = "fig. 30")
#----------------------------------------------------------------
GlobalCountryTemp %>%
filter(year(Date)> 1850) %>%
filter (Country == 'Oceania') %>%
select(LandAvgTemp) %>%
as_tibble() %>%
group_by(Date) %>%
summarise_at(vars(LandAvgTemp), list(LandTempOceania = mean)) %>%
as_tsibble() %>%
fill(LandTempOceania, .direction = 'down') -> tempOceania
decOceania <- tempOceania %>%
model(stl = STL(LandTempOceania))
#components(decOceania)
tempOceania %>%
autoplot(LandTempOceania, color = 'gray') +
autolayer(components(decOceania), trend, color = '#99004d') +
ggtitle('Land Temperature Oceania Trend') +
labs(caption = "fig. 31")
europe <- c('Austria', 'Portugal', 'Germany', 'United Kingdom (Europe)', 'Norway',
'France (Europe)', 'Ukraine', 'Poland', 'Greece', 'Belgium',
'Hungary', 'Italy', 'Albania', 'Spain')
africa <- c('Algeria', 'Angola', 'Benin', 'Botswana', 'Burkina Faso',
'Burundi', 'Cape Verde', 'Mali', 'Congo (Democratic Republic Of #The)', 'Zambia', 'Zimbabwe', 'Morocco', 'Niger', 'Nigeria')
asia <- c('China', 'Russia', 'Malaysia', 'Japan', 'Afghanistn', 'Saudi Arabia',
'Taiwan', 'Qatar', 'Armenia', 'Azerbaijan', 'Bahrain',
'Bangladesh', 'Bhutan', 'Brunei', 'Cambodia', 'Cyprus',
'Georgia', 'India', 'Indonesia', 'Iran', 'Jordan', 'Yemen')
north_america <- c('Antigua And Barbuda', 'Bahamas', 'Barbados',
'Belize', 'Canada', 'Costa Rica', 'Cuba', 'Dominica',
'Dominican Republic', 'El Salvador', 'Grenada',
'Guatemala', 'Haiti', 'Honduras', 'Jamaica', 'Mexico',
'United States', 'Panama')
south_america <- c('Argentina', 'Bolivia', 'Brazil', 'Chile',
'Colombia', 'Peru', 'Paraguay', 'Guyana', 'Ecuador',
'Suriname', 'Uruguay', 'Venezuela')
oceania <- c('Australia', 'Fiji', 'Kiribati', 'Marshall Islands',
'Micronesia', 'Nauru', 'New Zealand', 'Palau', 'Papua New Guinea',
'Samoa', 'Tonga')
GlobalCountryTemp %>%
fill(LandAvgTemp, .direction = "down") %>%
features(LandAvgTemp, feat_stl) %>%
drop_na(trend_strength, seasonal_strength_year) %>%
mutate(Continent = case_when(
Country %in% europe  ~ "Europe" ,
Country %in% africa  ~ "Africa" ,
Country %in% asia  ~ "Asia" ,
Country %in% north_america  ~ "North America",
Country %in% south_america  ~ "South America",
Country %in% oceania  ~ "Oceania"
)
) %>%
drop_na(Continent) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, colour = Continent)) +
scale_color_manual(values=c('#ff9900', '#ff4d94', '#9900cc', '#009999', '#ffcc00', '#00cc00')) +
geom_point() +
labs(title= 'Trend and Seasonal Strenght in different Countries', caption = "fig. 32")
components(dec) %>% gg_subseries(season_year) +
labs(title = 'Subseries by month of Land and Ocean Global Temperatures', caption = "fig. 33")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp),
Drift = RW(LandAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
autoplot((filter(GlobalCountryTemp, year(Date) > 2000))) +
labs(title = "Global Land Average Temperature - Forecast",
subtitle = "Drift and Seasonal naïve method",
y="LandAvgTemp Cº",
caption = "fig. 34")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandOceanAvgTemp),
Drift = RW(LandOceanAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land & Ocean Average Temperature - Forecast",
subtitle = "Drift and Seasonal naïve method",
y="LandOceanAvgTemp Cº",
caption = "fig. 35")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandAvgTemp, .direction = "down") %>%
model(stlf = decomposition_model(
STL(LandAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>%
forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land Average Temperature - Forecast",
subtitle = "Drift method based on seasonal adjusted data",
y="LandAvgTemp Cº",
caption = "fig. 36")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
model(stlf = decomposition_model(
STL(LandOceanAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>%
forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land & Ocean Average Temperature - Forecast",
subtitle = "Drift method based on seasonal adjusted data",
y="LandOceanAvgTemp Cº",
caption = "fig. 37")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
filter(!is.na(LandAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp),
Drift = RW(LandAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
filter(!is.na(LandAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(stlf = decomposition_model(
STL(LandAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(Seasonal_naive = SNAIVE(LandOceanAvgTemp),
Drift = RW(LandOceanAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(stlf = decomposition_model(
STL(LandOceanAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp)) %>%
augment() %>%
autoplot(.resid) + labs(title = "Residuals from Seasonal naïve method", caption = "fig. 24")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp)) %>%
augment() %>%
ACF(.resid) %>%
autoplot() + labs(title = "ACF of Residuals from Seasonal naïve method", caption = "fig. 38")
