GlobalCountryTemp %>%
fill(LandAvgTemp, .direction = "down") %>%
features(LandAvgTemp, feat_stl) %>%
drop_na(trend_strength, seasonal_strength_year) %>%
mutate(Continent = case_when(
Country %in% europe  ~ "Europe" ,
Country %in% africa  ~ "Africa" ,
Country %in% asia  ~ "Asia" ,
Country %in% north_america  ~ "North America",
Country %in% south_america  ~ "South America",
Country %in% oceania  ~ "Oceania"
)
) %>%
drop_na(Continent) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, colour = Continent)) +
scale_color_manual(values=c('#ff9900', '#ff4d94', '#9900cc', '#009999', '#ffcc00', '#00cc00')) +
geom_point() +
labs(title= 'Trend and Seasonal Strenght in different Countries', caption = "fig. 32")
components(dec) %>% gg_subseries(season_year) +
labs(title = 'Subseries by month of Land and Ocean Global Temperatures', caption = "fig. 33")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp),
Drift = RW(LandAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
autoplot((filter(GlobalCountryTemp, year(Date) > 2000))) +
labs(title = "Global Land Average Temperature - Forecast",
subtitle = "Drift and Seasonal naïve method",
y="LandAvgTemp Cº",
caption = "fig. 34")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandOceanAvgTemp),
Drift = RW(LandOceanAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land & Ocean Average Temperature - Forecast",
subtitle = "Drift and Seasonal naïve method",
y="LandOceanAvgTemp Cº",
caption = "fig. 35")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandAvgTemp, .direction = "down") %>%
model(stlf = decomposition_model(
STL(LandAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>%
forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land Average Temperature - Forecast",
subtitle = "Drift method based on seasonal adjusted data",
y="LandAvgTemp Cº",
caption = "fig. 36")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
model(stlf = decomposition_model(
STL(LandOceanAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>%
forecast(h = "8 years") %>%
autoplot(filter(GlobalCountryTemp, year(Date) > 2000)) +
labs(title = "Global Land & Ocean Average Temperature - Forecast",
subtitle = "Drift method based on seasonal adjusted data",
y="LandOceanAvgTemp Cº",
caption = "fig. 37")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
filter(!is.na(LandAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp),
Drift = RW(LandAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
filter(!is.na(LandAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(stlf = decomposition_model(
STL(LandAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(Seasonal_naive = SNAIVE(LandOceanAvgTemp),
Drift = RW(LandOceanAvgTemp ~ drift())
) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandOceanAvgTemp, .direction = "down") %>%
filter(!is.na(LandOceanAvgTemp)) %>%
stretch_tsibble(.init = 3, .step = 1) %>%
model(stlf = decomposition_model(
STL(LandOceanAvgTemp ~ trend(window = 7), robust = TRUE),
Drift = RW(season_adjust ~ drift())
)) %>% forecast(h = "8 years") %>%
accuracy(GlobalCountryTemp)
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp)) %>%
augment() %>%
autoplot(.resid) + labs(title = "Residuals from Seasonal naïve method", caption = "fig. 24")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
fill(LandAvgTemp, .direction = "down") %>%
model(Seasonal_naive = SNAIVE(LandAvgTemp)) %>%
augment() %>%
ACF(.resid) %>%
autoplot() + labs(title = "ACF of Residuals from Seasonal naïve method", caption = "fig. 38")
GlobalCountryTemp %>%
filter(Country=="Global") %>%
filter(year(Date)>=1990) %>%
autoplot(LandAvgTemp)
GlobalCountryTemp %>%
filter(Country %in% c("Global", "North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990) %>%
autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_global <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
land_global %>% autoplot(LandAvgTemp)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
global_temp %>% autoplot(LandAvgTemp)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>% model(ets = ETS(LandAvgTemp))
report(fot_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>% model(ets = ETS(LandAvgTemp))
report(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>% model(ets = ETS(LandAvgTemp))
report(fit_global)
accuracy(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>%
model(
ANA = ETS(LandAvgTemp),
)
report(fit_global)
accuracy(fit_global)
tidy(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>%
model(
ANA = ETS(LandAvgTemp),
)
report(fit_global)
accuracy(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>%
model(
ANA = ETS(LandAvgTemp),
AAA = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
report(fit_global)
accuracy(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M")),
Land_Ocean = ETS(LandOceanAvgTemp)
)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
report(fit_global)
accuracy(fit_global)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global_land <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
fit_global_ocean <- global_temp %>%
model(
LandOcean = ETS(LandOceanAvgTemp)
)
report(fit_global_land)
accuracy(fit_global_land)
report(fit_global_ocean)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global_land <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
fit_global_ocean <- global_temp %>%
model(
LandOcean = ETS(LandOceanAvgTemp)
)
report(fit_global_land)
accuracy(fit_global_land)
report(fit_global_ocean)
global_temp %>% autoplot(LandAvgTemp)
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global_land <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
fit_global_ocean <- global_temp %>%
model(
LandOcean = ETS(LandOceanAvgTemp)
)
report(fit_global_land)
accuracy(fit_global_land)
report(fit_global_ocean)
fit_global_land %>% components(AAA_Land) %>%  autoplot()
global_temp <-
GlobalCountryTemp %>%
filter(Country == "Global") %>%
filter(year(Date)>=1990)
fit_global_land <- global_temp %>%
model(
ANA_Land = ETS(LandAvgTemp),
AAA_Land = ETS(LandAvgTemp ~ error("A") + trend("A") + season("A")),
MAM_Land = ETS(LandAvgTemp ~ error("M") + trend("A") + season("M"))
)
report(fit_global_land)
accuracy(fit_global_land)
fit_global_land %>% components() %>%  autoplot()
fit_global_ocean <- global_temp %>%
model(
LandOcean = ETS(LandOceanAvgTemp)
)
report(fit_global_ocean)
land_continents
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
report(fit_continents)
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
report(fit_continents)
accuracy(fit_continents)
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
fit_continents %>% filter(Country == "North America")
report(fit_continents)
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
report(fit_continents)
fit_continents %>% filter(Country == "North America") %>% report()
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
report(fit_continents)
fit_continents %>% filter(Country == "Africa") %>% report()
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
land_continents <-
GlobalCountryTemp %>%
filter(Country %in% c("North America", "South America", "Europe", "Asia", "Oceania", "Africa")) %>%
filter(year(Date)>=1990)
fit_continents <- land_continents %>%
model(
continents = ETS(LandAvgTemp)
)
report(fit_continents)
fit_continents %>% filter(Country == "Oceania") %>% report()
#land_continents %>% autoplot(LandAvgTemp) + facet_grid(Country~., scales = "free_y")
fit_global_ocean <- global_temp %>%
model(
ANA_LandOcean = ETS(LandOceanAvgTemp),
AAA_LandOcean = ETS(LandOceanAvgTemp ~ error("A")+trend("A")+season("A")),
MAM_LandOcean = ETS(LandOceanAvgTemp ~ error("M")+trend("A")+season("M"))
)
report(fit_global_ocean)
fit_global_ocean %>% components() %>%  autoplot()
knitr::opts_chunk$set(echo = TRUE)
#loading libraries
library(fpp3)
library(tidyverse)
library(patchwork)
#install.packages("seasonal")
#working directory for github
setwd("~/Project-Forecasting-Methods")
#code to modify our original data files so we could merge them
#---------------------------------------------
#loading the data
#GlobalTemperature <-read.csv("data/GlobalTemperatures.csv")
#adding column
#GlobalTemperature["Country"]<- "Global"
#creating new csv file
#write.csv(GlobalTemperature, "GlobalTemperatures2.csv")
#Country <- read.csv("data/GlobalLandTemperaturesByCountry.csv")
#names(Country) <-c("dt","LandAverageTemperature", "AverageTemperatureUncertainty","Country")
#write.csv(Country,"GlobalLandTemperaturesByCountry2.csv")
#-------------------------------------------
#merging Global file with country file
GlobalCountryTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
#transforming in a tsibble
GlobalCountryTemp<- GlobalCountryTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, Country, everything()) %>% select(-dt,-LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty,-AverageTemperatureUncertainty)
#changing columns names
names(GlobalCountryTemp) <-c('Date','Country','idk', 'LandAvgTemp','LandAvgTempUnc', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp', 'LandOceanAvgTempUnc')
GlobalCountryTemp <-GlobalCountryTemp %>%  select(-idk)
#-------------------Objects for visualization
#Creating GlobalTemp object, which contains only Global values and cleaning it for visualization
GlobalTempV <- GlobalCountryTemp %>% filter(Country=="Global")  %>% filter(year(Date)>1984, year(Date)<2014)
GlobalTempV <-na.omit(GlobalTempV)
#Creating CountryTemp objects, each contains one country and cleaning it for visualizations purpose -->Not sure if its needed to use
#using years above 1984 for visualisation purposes
#PortugalTempV <-GlobalCountryTemp %>% filter(Country == "Portugal") %>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#GermanyTempV <-GlobalCountryTemp %>% filter(Country == "Germany")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#UkTempV <-GlobalCountryTemp %>% filter(Country == "United Kingdom")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#BrazilTempV <-GlobalCountryTemp %>% filter(Country == "Brazil")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#USATempV <-GlobalCountryTemp %>% filter(Country == "United States")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#ChinaTempV <-GlobalCountryTemp %>% filter(Country == "China")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#MaliTempV <-GlobalCountryTemp %>% filter(Country == "Mali")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#SouthAfricaTempV <-GlobalCountryTemp %>% filter(Country == "South Africa")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#AustraliaTempV <-GlobalCountryTemp %>% filter(Country == "Australia")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#GreenlandTempV <- GlobalCountryTemp %>% filter(Country == "Greenland")%>% select(Date, Country, LandAvgTemp)%>% filter(year(Date)>1984)
#divided it because analysing 10 at once gets really messy
countries<- c('Portugal','Mali','Greenland')
countries2<- c('Portugal', 'Germany', 'United Kingdom','Brazil','United States')
countries3<-c('China','Mali','South Africa','Australia','Greenland')
#-------------------Objects to use in the rest of the work
#Global
GlobalTemp <- GlobalCountryTemp %>% filter(Country=="Global")
GlobalTemp <-na.omit(GlobalTemp)
#Countries-->not sure if its needed to use
PortugalTemp <-GlobalCountryTemp %>% filter(Country == "Portugal") %>% select(Date, Country, LandAvgTemp)
GermanyTemp <-GlobalCountryTemp %>% filter(Country == "Germany")%>% select(Date, Country, LandAvgTemp)
UkTemp <-GlobalCountryTemp %>% filter(Country == "United Kingdom")%>% select(Date, Country, LandAvgTemp)
BrazilTemp <-GlobalCountryTemp %>% filter(Country == "Brazil")%>% select(Date, Country, LandAvgTemp)
USATemp <-GlobalCountryTemp %>% filter(Country == "United States")%>% select(Date, Country, LandAvgTemp)
ChinaTemp <-GlobalCountryTemp %>% filter(Country == "China")%>% select(Date, Country, LandAvgTemp)
MaliTemp <-GlobalCountryTemp %>% filter(Country == "Mali")%>% select(Date, Country, LandAvgTemp)
SouthAfricaTemp <-GlobalCountryTemp %>% filter(Country == "South Africa")%>% select(Date, Country, LandAvgTemp)
AustraliaTemp <-GlobalCountryTemp %>% filter(Country == "Australia")%>% select(Date, Country, LandAvgTemp)
GreenlandTemp <- GlobalCountryTemp %>% filter(Country == "Greenland")%>% select(Date, Country, LandAvgTemp)
europe <- c('Austria', 'Portugal', 'Germany', 'United Kingdom (Europe)', 'Norway',
'France (Europe)', 'Ukraine', 'Poland', 'Greece', 'Belgium',
'Hungary', 'Italy', 'Albania', 'Spain')
africa <- c('Algeria', 'Angola', 'Benin', 'Botswana', 'Burkina Faso',
'Burundi', 'Cape Verde', 'Mali', 'Congo (Democratic Republic Of #The)', 'Zambia', 'Zimbabwe', 'Morocco', 'Niger', 'Nigeria')
asia <- c('China', 'Russia', 'Malaysia', 'Japan', 'Afghanistn', 'Saudi Arabia',
'Taiwan', 'Qatar', 'Armenia', 'Azerbaijan', 'Bahrain',
'Bangladesh', 'Bhutan', 'Brunei', 'Cambodia', 'Cyprus',
'Georgia', 'India', 'Indonesia', 'Iran', 'Jordan', 'Yemen')
north_america <- c('Antigua And Barbuda', 'Bahamas', 'Barbados',
'Belize', 'Canada', 'Costa Rica', 'Cuba', 'Dominica',
'Dominican Republic', 'El Salvador', 'Grenada',
'Guatemala', 'Haiti', 'Honduras', 'Jamaica', 'Mexico',
'United States', 'Panama')
south_america <- c('Argentina', 'Bolivia', 'Brazil', 'Chile',
'Colombia', 'Peru', 'Paraguay', 'Guyana', 'Ecuador',
'Suriname', 'Uruguay', 'Venezuela')
oceania <- c('Australia', 'Fiji', 'Kiribati', 'Marshall Islands',
'Micronesia', 'Nauru', 'New Zealand', 'Palau', 'Papua New Guinea',
'Samoa', 'Tonga')
Fig1 <- GlobalTemp %>% autoplot(LandOceanAvgTemp)+
geom_line(color="blue")+
labs(title = "Gloabal Land & Ocean Temperature",
subtitle = "Average",
y="LandOceanAvgTemp Cº",
caption = "fig. 1")
Fig2 <- GlobalCountryTemp %>% filter(Country == "Brazil") %>% autoplot(LandAvgTemp)+
geom_line(color="green")+
labs(title = "Land Temperature in Brazil",
subtitle="Average",
y="LandAvgTemp Cº",
caption = "fig. 2")
Fig3 <- GlobalCountryTemp %>% filter(Country=="Global") %>% autoplot(LandAvgTempUnc)+
labs(title = "Land Average temperature Uncertainty - Evolution through time",
caption = "fig. 3")
(Fig1 | Fig2 ) / Fig3
Fig1 <- GlobalTemp %>% autoplot(LandOceanAvgTemp)+
geom_line(color="blue")+
labs(title = "Gloabal Land & Ocean Temperature",
subtitle = "Average",
y="LandOceanAvgTemp Cº",
caption = "fig. 1")
Fig2 <- GlobalCountryTemp %>% filter(Country == "Brazil") %>% autoplot(LandAvgTemp)+
geom_line(color="green")+
labs(title = "Land Temperature in Brazil",
subtitle="Average",
y="LandAvgTemp Cº",
caption = "fig. 2")
Fig3 <- GlobalCountryTemp %>% filter(Country=="Global") %>% autoplot(LandAvgTempUnc)+
labs(title = "Land Average temperature Uncertainty - Evolution through time",
subtitle="Average",
caption = "fig. 3")
(Fig1 | Fig2 ) / Fig3
Fig1 <- GlobalTemp %>% autoplot(LandOceanAvgTemp)+
geom_line(color="blue")+
labs(title = "Gloabal Land & Ocean Temperature",
subtitle = "Average",
y="LandOceanAvgTemp Cº",
caption = "fig. 1")
Fig2 <- GlobalCountryTemp %>% filter(Country == "Brazil") %>% autoplot(LandAvgTemp)+
geom_line(color="green")+
labs(title = "Land Temperature in Brazil",
subtitle="Average",
y="LandAvgTemp Cº",
caption = "fig. 2")
Fig3 <- GlobalCountryTemp %>% filter(Country=="Global") %>% autoplot(LandAvgTempUnc)+
labs(title = "Land Temperature Uncertainty - Evolution over time",
subtitle="Average",
caption = "fig. 3")
(Fig1 | Fig2 ) / Fig3
