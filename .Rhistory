col = Purpose)) +
geom_point() +
facet_wrap(vars(State))
library(fpp3)
library(tidyverse)
tourism %>%
features(Trips, feat_stl) %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
col = Purpose)) +
geom_point() +
facet_wrap(vars(State))
tourism %>% features(Trips, feat_acf)
library(fpp3)
library(tidyverse)
aus_accommodation
aus_accommodation %>% distinct(State)
schooldata1 <-c(2.11,9.75,13.88,11.3,8.93,15.66,16.38,4.54,8.86,11.94,12.47,11.11,11.65, 14.53, 9.61, 7.38, 3.34,9.06,
9.45, 5.98,7.44, 8.5, 1.55, 11.45, 9.73)
school2data <-c(0.29, 1.13, 6.52,11.72,6.54,5.63,14.59,11.74,9.12,9.43
10.64, 12.28,9.5,0.63,15.35,5.31,8.49,3.04,3.77,6.22,2.14,6.58,1.11)
school2data <-c(0.29, 1.13, 6.52,11.72,6.54,5.63,14.59,11.74,9.12,9.43,
10.64, 12.28,9.5,0.63,15.35,5.31,8.49,3.04,3.77,6.22,2.14,6.58,1.11)
school3data <-c(4.33, 7.77,4.15, 5.64,7.69,5.04,10.01,13.43,13.63,9.9,
5.72,5.16,4.33,12.9,11.27,6.05,0.95,6.02,12.22,12.85)
school1data <-c(2.11,9.75,13.88,11.3,8.93,15.66,16.38,4.54,8.86,11.94,12.47,11.11,11.65, 14.53, 9.61, 7.38, 3.34,9.06,
9.45, 5.98,7.44, 8.5, 1.55, 11.45, 9.73)
school1data <-c(2.11,9.75,13.88,11.3,8.93,15.66,16.38,4.54,8.86,11.94,12.47,11.11,11.65, 14.53, 9.61, 7.38, 3.34,9.06,
9.45, 5.98,7.44, 8.5, 1.55, 11.45, 9.73)
school2data <-c(0.29, 1.13, 6.52,11.72,6.54,5.63,14.59,11.74,9.12,9.43,
10.64, 12.28,9.5,0.63,15.35,5.31,8.49,3.04,3.77,6.22,2.14,6.58,1.11)
school3data <-c(4.33, 7.77,4.15, 5.64,7.69,5.04,10.01,13.43,13.63,9.9,
5.72,5.16,4.33,12.9,11.27,6.05,0.95,6.02,12.22,12.85)
mu0 <- 5
sigma02 <- 4
k0 <- 1
v0 <- 2
bary1 <- mean(school1data)
n1 <- 25
n2 <- 23
n3 <- 20
bary1 <- mean(school1data)
bary2 <- mean(school2data)
bary3 <- mean(school3data)
#prior
mu0 <- 5
sigma02 <- 4
k0 <- 1
v0 <- 2
# data
n1 <- 25
n2 <- 23
n3 <- 20
bary1 <- mean(school1data)
bary2 <- mean(school2data)
bary3 <- mean(school3data)
s12 <- sd(school1data)
s22 <- sd(school2data)
s32 <- sd(school3data)
s12 <- var(school1data)
s22 <- var(school2data)
s32 <- var(school3data)
kn <- k0 + n1
mun <- ((k0* mu0)+ (n1* bary1))/kn
kn1 <- k0 + n1
mun <- ((k0* mu0)+ (n1* bary1))/kn1
sigman12 <- (1/nun) * (nu0 * sigma02 + (n - 1) * s12 + k0 * n * (bary - mu0)^2/kn)
nun <- nu0 + n
nu0 <- 2
nun <- nu0 + n
nun <- nu0 + n1
sigman12 <- (1/nun) * (nu0 * sigma02 + (n - 1) * s12 + k0 * n * (bary - mu0)^2/kn)
sigman12 <- (1/nun) * (nu0 * sigma02 + (n1 - 1) * s12 + k0 * n1 * (bary - mu0)^2/kn)
sigman12 <- (1/nun) * (nu0 * sigma02 + (n1 - 1) * s12 + k0 * n1 * (bary1 - mu0)^2/kn)
nun1 <- nu0 + n1
gridsize <- 200
theta <- seq(from = 1.6, to = 2, length = gridsize)
prec <- seq(from = 20, to = 150, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
postprec
sigman12 <- (1/nun1) * (nu0 * sigma02 + (n1 - 1) * s12 + k0 * n1 * (bary1 - mu0)^2/kn)
kn1 <- k0 + n1
nun1 <- nu0 + n1
mun <- ((k0* mu0)+ (n1* bary1))/kn1
sigman12 <- (1/nun1) * (nu0 * sigma02 + (n1 - 1) * s12 + k0 * n1 * (bary1 - mu0)^2/kn)
gridsize <- 200
theta <- seq(from = 1.6, to = 2, length = gridsize)
prec <- seq(from = 20, to = 150, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
postprec
post <- matrix(0, gridsize, gridsize)
for (i in 1:gridsize) {
post[, i] <- sapply(prec, function(x) dnorm(theta[i], mun, 1/sqrt(10 * x)))
post[, i] <- post[, i] * postprec
}
grays <- gray((10:0)/10)
image(theta, prec, t(post), col = grays, xlab = expression(theta), ylab = expression(widetilde(sigma)^2))
gridsize <- 200
theta <- seq(from = 0, to = 20, length = gridsize)
prec <- seq(from = 0, to = 10, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
post <- matrix(0, gridsize, gridsize)
for (i in 1:gridsize) {
post[, i] <- sapply(prec, function(x) dnorm(theta[i], mun, 1/sqrt(10 * x)))
post[, i] <- post[, i] * postprec
}
grays <- gray((10:0)/10)
image(theta, prec, t(post), col = grays, xlab = expression(theta), ylab = expression(widetilde(sigma)^2))
gridsize <- 200
theta <- seq(from = 5, to = 15, length = gridsize)
prec <- seq(from = 0, to = 2, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
post <- matrix(0, gridsize, gridsize)
for (i in 1:gridsize) {
post[, i] <- sapply(prec, function(x) dnorm(theta[i], mun, 1/sqrt(10 * x)))
post[, i] <- post[, i] * postprec
}
grays <- gray((10:0)/10)
image(theta, prec, t(post), col = grays, xlab = expression(theta), ylab = expression(widetilde(sigma)^2))
gridsize <- 200
theta <- seq(from = 5, to = 15, length = gridsize)
prec <- seq(from = 0, to = 0.5, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
post <- matrix(0, gridsize, gridsize)
for (i in 1:gridsize) {
post[, i] <- sapply(prec, function(x) dnorm(theta[i], mun, 1/sqrt(10 * x)))
post[, i] <- post[, i] * postprec
}
grays <- gray((10:0)/10)
image(theta, prec, t(post), col = grays, xlab = expression(theta), ylab = expression(widetilde(sigma)^2))
gridsize <- 200
theta <- seq(from = 5, to = 15, length = gridsize)
prec <- seq(from = 0, to = 0.2, length = gridsize)
postprec <- sapply(prec, function(x) dgamma(x, nun1/2, nun1 * sigman12/2))
post <- matrix(0, gridsize, gridsize)
for (i in 1:gridsize) {
post[, i] <- sapply(prec, function(x) dnorm(theta[i], mun, 1/sqrt(10 * x)))
post[, i] <- post[, i] * postprec
}
grays <- gray((10:0)/10)
image(theta, prec, t(post), col = grays, xlab = expression(theta), ylab = expression(widetilde(sigma)^2))
library(fpp3)
library(tidyverse)
Australia <- global_economy %>%
filter(Country == "Australia")
Australia
aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, year)
aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, year) %>% autoplot()
Bricks <- aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, year)
Bricks <- aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, Year) %>% autoplot()
aus_production
Bricks <- aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, Quarter)
aus_production %>%
filter(!is.na(Bricks)) %>%
select(Bricks, Quarter) %>% autoplot()
Wealth <- hh_budget %>%
filter(Country== "Australia") %>%
select(Wealth)
Fit_Wealth <- Wealth %>%
model(
Mean = MEAN(Wealth),
`NaÃ¯ve` = NAIVE(Wealth),
Drift= NAIVE(Wealth~drift())
)
Fit_Wealth %>% forecast %>%  autoplot(Wealth)
fb <- gafa_stock %>%
filter(Symbol== "FB", year(Date) >= 2015)
fb %>% autoplot(Close)+labs(y="$", title="Facebook  stock")
fb <- fb %>% mutate(day= row_number()) %>%
update_tsibble(index= day, regular= TRUE) %>%
filter()
fb15<- fb %>%  filter(year(Date)== 2015)
fit_fb15 <- fb15 %>% model(
RW(Close ~drift())
)
fb16 <- fb %>% filter(yearmonth(Date)== yearmonth("2016 Jan"))
forecast<-fit_fb15 %>% forecast(new_data=fb16)
forecast %>%
autoplot(fb15,level= NULL)+
autolayer(fb16, Close, colour= "black")
Victoria <- aus_livestock %>% filter(State== "Victoria")
VictoriaFit <- Victoria %>% model(
SNAIVE(Count ~lag("year"))
)
VictoriaFit %>% forecast(h=4) %>% autoplot(Victoria)
setwd("~/GitHub/Project-Forecasting-Methods")
setwd("~/GitHub/Project-Forecasting-Methods")
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- read.csv("GlobalTemperaturesByCountry.csv")
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalTemperaturesByCountry.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
View(GlobalTemperatureCountry)
View(GlobalTemperatureCountry)
View(GlobalTemperature)
tsibble<-function(data){
data<- data %>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>%
select(-dt)
return(data)
}
data<- read.csv("GlobalTemperatures.csv")
data2 <-na.omit(data)
tsibble(data2)
library(fpp3)
library(tidyverse)
tsibble<-function(data){
data<- data %>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>%
select(-dt)
return(data)
}
tsibble(data2)
tsibble(GlobalTemperature)
tsibble(GlobalTemperatureCountry)
GlobalTemperature
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt) ->cleanedData
GlobalTemperature
View(GlobalTemperatureCountry)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key = Date,Country) %>%  select(-dt)
View(GlobalTemperatureCountry)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key = c(Date, Country)) %>%  select(-dt)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt)
GlobalTemperatureCountry
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt) %>% select(Date, everything())
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt) %>% select(Date, everything())
GlobalTemperatureCountry
names(GlobalTemperature
)
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt) %>% select(Date, everything())
#changing columns names
#names(GlobalTemperature)<-('Date', LandAv)
GlobalTemperature
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt) %>% select(Date, everything())
#changing columns names
#names(GlobalTemperature)<-('Date', LandAv)
GlobalTemperature
GlobalTemperatureCountry
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, everything())
#changing columns names
#names(GlobalTemperature)<-('Date', LandAv)
names(GlobalTemperature)
names(GlobalTemperature)<-c('Date','LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'Land&OceanAvgTemp')
GlobalTemperature
names(GlobalTemperatureCountry)
names(GlobalTemperatureCountry) <- c('Date', 'AvgTemp', 'Country')
GlobalTemperatureCountry
names(GlobalTemperature)<-c('Date','LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'Land&OceanAvgTemp')
GlobalTemperature
View(GlobalTemperatureCountry)
GlobalTemperatureCountry %>% filter(Country=="Portugal")
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, Country, AvgTemp)
View(GlobalTemperatureCountry)
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, Country, AverageTemperature)
#changing columns names
names(GlobalTemperature)<-c('Date','LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'Land&OceanAvgTemp')
names(GlobalTemperatureCountry) <- c('Date', 'AvgTemp', 'Country')
#Selecting countries
Countryfilter <-function(tsibble, country){
tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
}
Countryfilter(PortugalTemp, Portugal)
PortugalTemp
Countryfilter <-function(tsibble, country){
tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
return(tsibble)
}
Countryfilter(PortugalTemp, Portugal)
PortugalTemp
PortugalTemp <-Countryfilter(PortugalTemp, Portugal)
PortugalTemp
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty )
GlobalTemperatureCountry
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, Country, AverageTemperature)
GlobalTemperatureCountry
names(GlobalTemperature)<-c('Date','LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'Land&OceanAvgTemp')
names(GlobalTemperatureCountry) <- c('Date', 'Country', 'AvgTemp')
PortugalTemp <-Countryfilter(PortugalTemp, Portugal)
Countryfilter <-function(tsibble, country){
tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
return(tsibble)
PortugalTemp <-Countryfilter(PortugalTemp, Portugal)
Countryfilter <-function(tsibble, country){
tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
return(tsibble)
}
setwd("~/GitHub/Project-Forecasting-Methods")
#loading the data
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
#cleaning nas
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
#transforming in tsibbles
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, Country, AverageTemperature)
#changing columns names
names(GlobalTemperature)<-c('Date','LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'Land&OceanAvgTemp')
names(GlobalTemperatureCountry) <- c('Date', 'Country', 'AvgTemp')
#Selecting countries
Countryfilter <-function(tsibble, country){
tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
return(tsibble)
}
PortugalTemp <-Countryfilter(PortugalTemp, Portugal)
View(GlobalTemperatureCountry)
GlobalTemperatureCountry %>% filter(Country == "Portugal")
Countryfilter <-function(country){
#tsibble <- GlobalTemperatureCountry %>% filter(Country == "country")
return(GlobalTemperatureCountry %>% filter(Country == "country"))
}
PortugalTemp <-Countryfilter(Portugal)
PortugalTemp
PortugalTemp <-GlobalTemperatureCountry %>% filter(Country == "Portugal")
UkTemp <-GlobalTemperatureCountry %>% filter(Country == "United Kingdom")
PortugalTemp <-GlobalTemperatureCountry %>% filter(Country == "Portugal")
GermanyTemp <-GlobalTemperatureCountry %>% filter(Country == "Germany")
UkTemp <-GlobalTemperatureCountry %>% filter(Country == "United Kingdom")
BrazilTemp <-GlobalTemperatureCountry %>% filter(Country == "Brazil")
USATemp <-GlobalTemperatureCountry %>% filter(Country == "United States")
ChinaTemp <-GlobalTemperatureCountry %>% filter(Country == "China")
AntarcticaTemp <-GlobalTemperatureCountry %>% filter(Country == "Antarctica")
MaliTemp <-GlobalTemperatureCountry %>% filter(Country == "Mali")
SouthAfricaTemp <-GlobalTemperatureCountry %>% filter(Country == "South Africa")
AustraliaTemp <-GlobalTemperatureCountry %>% filter(Country == "Australia")
View(AntarcticaTemp)
View(GlobalTemperature)
data_join <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                              # Store all files in list
reduce(full_join, by = "dt")                      # Full-join data sets into one data set
data_join
data_join %>% filter(Country != "Ãland")
names(data_join)
select(-AverageTemperatureUncertainty, -LandAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAndOceanAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
data_join %>% filter(Country != "Ãland") %>%
select(-AverageTemperatureUncertainty, -LandAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAndOceanAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
data<- read.csv("GlobalTemperatures.csv")
data2 <-na.omit(data)
data2
data2 %>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>%
select(-dt) ->cleanedData
cleanedData
cleanedData %>% %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
cleanedData%>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperature<- GlobalTemperature%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date) %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemperature
GlobalTemperature <- na.omit(GlobalTemperature)
GlobalTemperature
GlobalTemperature %>% mutate(Country== "Global")
rlang::last_error()
rlang::last_trace()
GlobalTemperature["Country"]<- Global
GlobalTemperature["Country"]<- 'Global'
GlobalTemperature
?cbind
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
GlobalTemperatureCountry <- na.omit(GlobalTemperatureCountry)
GlobalTemperatureCountry <- GlobalTemperatureCountry %>% mutate(Date= yearmonth(dt)) %>% as_tsibble(index=Date, key =Country) %>%  select(-dt, -AverageTemperatureUncertainty ) %>% select(Date, Country, AverageTemperature)
cbind(GlobalTemperatureCountry,GlobalTemperature )
GlobalTemperature <-read.csv("GlobalTemperatures.csv")
GlobalTemperatureCountry <- read.csv("GlobalLandTemperaturesByCountry.csv")
GlobalTemperature["Country"]<-"Global"
cbind(GlobalTemperatureCountry,GlobalTemperature )
write.csv(cleadnedData, GlobalTemperatures2.csv)
GlobalTemperature
write.csv(GlobalTemperature, GlobalTemperatures2.csv)
View(GlobalTemperatureCountry)
View(GlobalTemperature)
write.csv(GlobalTemperature, GlobalTemperatures2.csv)
write.csv(GlobalTemperature, GlobalTemperatures2.csv)
setwd("~/GitHub/Project-Forecasting-Methods")
write.csv(GlobalTemperature, GlobalTemperatures2.csv)
write.csv(GlobalTemperature, GlobalTemperatures.csv)
write.csv(GlobalTemperature, "GlobalTemperatures2.csv")
GlobalTemperature2 <-read.csv("GlobalTemperatures2.csv")
data_all <- list.files(path = "C:/Users/Joach/Desktop/my_folder",  # Identify all CSV files
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                              # Store all files in list
bind_rows                                         # Combine data sets into one data set
data_all                                            # Print data to RStudio console
data_all <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                              # Store all files in list
bind_rows
data_all
View(data_all)
View(data_all)
View(data_all)
View(data_all)
View(data_all)
GlobalTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
GlobalTemp
View(GlobalTemp)
GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country")
GlobalTemp<- GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty)
GlobalTemp
View(GlobalTemp)
names(GlobalTemp) <-c('Date','AvgTemp', 'Country', 'idk', 'LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp')
GlobalTemp
GlobalTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
GlobalTemp<- GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
names(GlobalTemp) <-c('Date','AvgTemp', 'Country', 'idk', 'LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp')
GlobalTemp
GlobalTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
View(GlobalTemp)
GlobalTemp<- GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
View(GlobalTemp)
names(GlobalTemp) <-c('Date','AvgTemp', 'Country', 'idk', 'LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp')
GlobalTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
GlobalTemp
GlobalTemp<- GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
GlobalTemp
GlobalCountryTemp<- GlobalCountryTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
GlobalCountryTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
#transforming in a tsibble
GlobalCountryTemp<- GlobalCountryTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
GlobalTemp <- list.files(pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
#transforming in a tsibble
GlobalTemp<- GlobalTemp%>% mutate(Date = yearmonth(dt)) %>% as_tsibble(index=Date, key="Country") %>% select(Date, everything()) %>% select(-dt, -LandAndOceanAverageTemperatureUncertainty, -LandMaxTemperatureUncertainty, -LandMinTemperatureUncertainty, -LandAverageTemperatureUncertainty, -AverageTemperatureUncertainty)
#changing columns names
names(GlobalTemp) <-c('Date','AvgTemp', 'Country', 'idk', 'LandAvgTemp', 'LandMaxTemp', 'LandMinTemp', 'LandOceanAvgTemp')
GlobalTemp
